@model IEnumerable<UnderwritingListVM>

@{
    ViewData["Title"] = "Underwriting Enquiries";
}

<h1>Policy Underwriting Enquiries</h1>

<p>
    <a asp-action="Create" asp-route-id="@ViewContext.RouteData.Values["id"]" class="btn btn-outline-success">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Client)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Policy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClientProposedValueOfAsset)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StateOfProperty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LocationOfProperty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SecurityOfPropertyScore)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PrimaryUseOfPropertyScore)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AdditionalNotes)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Approved)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Client.FirstName) @Html.DisplayFor(modelItem => item.Client.Surname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Policy.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientProposedValueOfAsset)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StateOfProperty.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LocationOfProperty.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SecurityOfPropertyScore.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PrimaryUseOfPropertyScore.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AdditionalNotes)
            </td>
            <td>
                @if (item.Approved == null)
                {
                    <span class="badge bg-warning"> Awaiting Approval </span>
                }
                else if (item.Approved == true)
                {
                    <span class="badge bg-success"> Approved </span>
                }
                else if (item.Approved == false)
                {
                    <span class="badge bg-danger"> Rejected </span>
                }

            </td>
            <td>
                <a asp-action="Details" class="btn btn-outline-info" asp-route-id="@item.Id"><i class="fa fa-info-circle"> </i></a>
                <button class="btn btn-outline-danger mt-1 btnDelete" data-id="@item.Id" type="button"><i class="fa fa-trash"> </i></button>
            </td>
        </tr>
}
    </tbody>
</table>

<form id="deleteForm" asp-action="Delete">
    <input type="hidden" id="schemeId" name="Id" />
</form>