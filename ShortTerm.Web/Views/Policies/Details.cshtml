@using ShortTerm.Web.Constants;
@model ShortTerm.Web.Data.Policy

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Policy</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ApplicationDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ApplicationDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ProductGroup)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ProductGroup.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IndividualProduct)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IndividualProduct.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ClientId)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ClientId)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Client.FirstName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Surname)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Client.Surname)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.NationalID)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Client.NationalId)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateOfBirth)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Client.DateOfBirth)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Age)
        </dt>
        <dd class = "col-sm-10">
            @{
                DateTime currentDate = DateTime.Now;
                TimeSpan ageSpan = currentDate - Model.Client.DateOfBirth;
                int ageInYears = (int)(ageSpan.TotalDays / 365.25); // Adjust for leap years
            }
            @Html.DisplayFor(model =>ageInYears) years
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.AnnualSalary)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.AnnualSalary)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PremiumTerm)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PremiumTerm)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.SumAssured)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SumAssured)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Premium)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Premium)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PaymentMethodId)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PaymentMethodId)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PaymentFrequencyId)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PaymentFrequencyId)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateCreated)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateModified)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateModified)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IndividualProduct.Retention)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IndividualProduct.Retention)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Index" class="btn btn-outline-dark">Back to List</a>
    <a asp-action="Edit" class="btn btn-outline-warning" asp-route-id="@Model?.Id">Edit</a> 
    @if (Model.SumAssured > Model.IndividualProduct.Retention && Model.IndividualProduct.CanBeCeded && SignInManager.IsSignedIn(User))
    {
        <a asp-action="Edit" class="btn btn-outline-secondary" asp-route-id="@Model?.Id">ReInsure</a>
    }
</div>
